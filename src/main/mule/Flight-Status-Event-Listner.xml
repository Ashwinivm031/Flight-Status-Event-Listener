<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:module-aip-logging="http://www.mulesoft.org/schema/mule/module-aip-logging"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd 
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/module-aip-logging http://www.mulesoft.org/schema/mule/module-aip-logging/current/mule-module-aip-logging.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

	<flow name="jms-consumerFlow"
		doc:id="55ff1fa1-62fd-4bd6-b217-05ea472634d4">
		<jms:listener doc:name="Flight Status Event Listner"
			doc:id="5a34a21e-442d-4a3f-89c4-b29c98505eb2" config-ref="JMS_Config"
			destination="${activemq.destination.flight-status-event-topic}"
			ackMode="AUTO" selector="JMSType='${activemq.flight-status-event.JMSType.CancelledEvent}' OR JMSType='${activemq.flight-status-event.JMSType.DelayedEvent}'" numberOfConsumers="${activemq.destination.numberOfConsumers}">
			<reconnect-forever frequency="${activemq.reconnection.frequency}" />
			<jms:consumer-type>
				<jms:queue-consumer />
			</jms:consumer-type>
			<jms:response sendCorrelationId="ALWAYS"
				persistentDelivery="true" />
		</jms:listener>
		<choice doc:name="Is Flight-Status-Event feature enabled" doc:id="ad47c6f3-62ce-4da6-95ed-aae3e892a777" >
			<when expression="#[lower(p('activemq.flight-status-event.enable')) == &quot;true&quot;]">
			<set-variable value='#[attributes.headers."JMSType"]'
			doc:name="Set JMSEventType"
			doc:id="751fa07c-8230-4882-b275-a869cc1b828f"
			variableName="JMSEventType" />
		<module-aip-logging:log-entry
			doc:name="Log The Event Received"
			doc:id="69881ead-8b98-48e2-a080-b56513c7692b"
			config-ref="Aip_logging_Config"
			message='#["The " ++ vars.JMSEventType default "" ++ " triggered"]' />
		<ee:transform doc:name="Trasform payload to Json"
			doc:id="8a675b6a-c88b-4e95-8c4f-6bcfeee648d2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

---
read(payload,"application/json")
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<module-aip-logging:log-entry
			doc:name="Log Event Information"
			doc:id="a388ee15-c4ba-4d7a-9585-230af7d88a64"
			config-ref="Aip_logging_Config"/>
		<flow-ref doc:name="Call: Flight Status" doc:id="8670ecf7-78f6-437c-b3e3-577dfe84ff71" name="flightStatusFlow"/>
		<module-aip-logging:log-entry doc:name="Log Success" doc:id="e80a9622-6124-4e8b-a390-be99d23a428e" config-ref="Aip_logging_Config" messageFormat="XML" tracePoint="AFTER_REQUEST"/>
			</when>
			<otherwise >
				<module-aip-logging:log-entry doc:name="Event status feature is disabled" doc:id="ce618490-84ed-4550-b9fb-27ff70d569d2" config-ref="Aip_logging_Config" priority="WARN" message='#["Flight status events are not being consumed by 15below as the feature is disabled"]'/>
			</otherwise>
		</choice>
		<error-handler ref="globalErrorHandler" />
	</flow>
	<sub-flow name="flightStatusFlow" doc:id="2e345e4d-4788-48e3-ad1b-fcd6047196f2">	
			<ee:transform doc:name="Build Request for Flight-Status Api" doc:id="d74bcaf3-8a14-47ba-af8c-f5524b7356a0">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml

ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns flig http://schemas.15below.com/flightTrigger.criteria
ns fif http://schemas.datacontract.org/2004/07/FifteenBelow.FlightStatus.FlightTriggerObjects
var flightStatusEvent = (readUrl("classpath://FlightStatusEventMapping.json","application/json"))

fun getFlightTravelInfo(airport, dateTime)=do {
 if(dateTime.estimatedUTC !=null) 
            {
                fif#AirportCode: airport.locationCode,
                fif#Estimated:dateTime.estimatedUTC as DateTime,    
                fif#Scheduled: dateTime.scheduledUTC as DateTime
            }
            else   
            {
                fif#AirportCode: airport.locationCode,         
                fif#Scheduled: dateTime.scheduledUTC as DateTime
            }
    }
---
{
    soapenv#Envelope:
    {     
        soapenv#Body:
            flig#NewFlightTrigger: 
            {
                flig#flightStatus:
                {
                    fif#ChangeDetail:  
                    {
                        fif#ChangeEvent: "INVALID-EVENT",
                        fif#ChangedFlightLeg: payload.impactedLeg,
                        fif#NewValue: null
                    },
                    fif#FlightInformation:{
                        fif#CarrierCode: "G4",
                        fif#DepartureDate: payload.flightInfo.legInfo.departureDateTime[0].scheduledUTC as DateTime,
                        fif#FlightLegs: (payload.flightInfo.legInfo map
                        {
                            fif#FSFlightLeg:
                            {
                           		fif#FSFlightArrival: getFlightTravelInfo($.arrivalAirport, $.arrivalDateTime),
                                fif#FSFlightDeparture: getFlightTravelInfo($.departureAirport, $.departureDateTime),
                                fif#FSFlightLegState:
                                {
                                    fif#Cancelled: $.cancelled,
                                    fif#Diverted: false,
                                    fif#Scheduled: true
                                },
                                fif#FlightLeg: $.nbr                   

                            }
                        }) distinctBy $,
                    fif#FlightNumber: payload.flightInfo.nbr
                },
                fif#JobID: correlationId
            }        
        }
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<until-successful maxRetries="${http.request.maxRetries}"
				doc:name="Until Successful"
				doc:id="f493fee8-ed6e-41e2-9341-2028a90b54e1" millisBetweenRetries="${http.request.millisBetweenRetries}">
				<try doc:name="Try"
					doc:id="7f88a154-49f5-4754-98aa-5952babe2289">
				
				<http:request method="POST" doc:name="Flight Status Service" doc:id="641040c1-888d-45f2-9f82-5401499fe143" config-ref="HTTP_15Below_Request_configuration" path="${http.fifteenBelow.flight-status.path}" sendCorrelationId="AUTO">
			<http:headers><![CDATA[#[output application/java
---
{
	"SOAPAction" : p('http.fifteenBelow.flight-status.soapAction'),
	"Content-Type" : "text/xml"
}]]]></http:headers>
		</http:request>
					<error-handler>
						<on-error-continue enableNotifications="true"
							logException="true"
							doc:name="On Error Continue for Connectivity Faliures"
							doc:id="29b9a8e8-517a-48e4-93f9-e3f1fe2829eb"
							when='#[error.errorType.identifier != "CONNECTIVITY" and error.errorType.identifier != "TIMEOUT"]'>
							<ee:transform doc:name="Create Error Variable"
								doc:id="33cc7514-1489-443f-b2e7-3c808184241c">
								<ee:message />
								<ee:variables>
								<ee:set-variable variableName="flight_status_error_object" ><![CDATA[%dw 2.0
output application/java
---
error]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</until-successful>
		<validation:is-true
				doc:id="8849d8ec-080c-45b6-8c19-224ce636e43a"
				expression="#[vars.flight_status_error_object == null]"
				message='#[vars.flight_status_error_object.detailedDescription]'
				doc:name="Check for errors other than connectivity errors" />
	</sub-flow>
	</mule>
